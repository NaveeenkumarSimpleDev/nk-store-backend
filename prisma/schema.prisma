// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL_1")
}

model Brand {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  value   String
  product Product[] 
}


model User {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String @unique
  role           String @default("user")
  hashedPassword String
  address        Address[]
  cart           Cart?

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  favouriteId String?     @db.ObjectId
  Favourite   Favourite[]
  orderItems  Orders[]
}
enum STATUS{
  pending
  dispatched
  delivered
  canceled
}

model Cart {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  cartItems Json?
  userId String? @unique @db.ObjectId
  User   User?   @relation(fields: [userId], references: [id])
}

model Product {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  mrp         Int
  discountPrice  Int
  rating        Int?
  category    String
  variations    Variation[]
  brand     Brand     @relation(fields: [brandId], references: [id])
  brandId       String
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Favourite {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  favourites Json?
  User       User   @relation(fields: [userId], references: [id])
  userId     String @unique @db.ObjectId 
}

model Variation {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  customAttributes Json?
  specifications Json?
  mrp  Int?
  price       Int
  stock          Int
  images         String[] 
  productId      String
  product        Product  @relation(fields: [productId], references: [id],onDelete: Cascade)
}
model Orders {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  shipperId    String
  orderItem    Json
  userId        String  
  selectedAddress   Json
  status       STATUS  @default(pending)
  user          User   @relation(fields:[userId], references:[id])
  createdAt DateTime @default(now())
}

model Address{
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  area    String
  landmark   String?
  locality  String
  mobile   String
  name   String
  pincode  String
  city    String
  state   String
  
  userId        String  
  user          User   @relation(fields:[userId], references:[id])  
}